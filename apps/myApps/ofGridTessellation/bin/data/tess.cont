#version 400 core

precision highp float;
precision highp int;
layout(std140, column_major) uniform;
layout(vertices = 3) out;

uniform int tessellationLevel;
uniform vec2 mousePos;

in vertex
{
    vec4 Color;
    vec3 Normal;
    vec3 TexCoord;
}In[];



out vertex
{
    vec4 Color;
    vec3 Normal;
    vec3 TexCoord;
}Out[];

void main()
{	


    vec2 pos = gl_in[gl_InvocationID].gl_Position.xy;
    
    // define the tesselation level depending on how near the vertex is to the mouse position
    vec2 mousePosTemp;
    mousePosTemp.x = (mousePos.x -2.0f) /2.0f;
    mousePosTemp.y = (-mousePos.y +2.0f) /2.0f;

    float distance = length(pos-mousePosTemp);
    const float lodScale = 10.0f;

    float lod = mix(0.0f,gl_MaxTessGenLevel, distance);

	gl_TessLevelInner[0] = lod;
	gl_TessLevelInner[1] = lod;
	gl_TessLevelOuter[0] = lod;
	gl_TessLevelOuter[1] = lod;
	gl_TessLevelOuter[2] = lod;
	gl_TessLevelOuter[3] = lod;

	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
    
	Out[gl_InvocationID].Color = In[gl_InvocationID].Color;
	Out[gl_InvocationID].Normal = In[gl_InvocationID].Normal;
	Out[gl_InvocationID].TexCoord = In[gl_InvocationID].TexCoord;
}

